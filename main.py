# This Python file uses the following encoding: utf-8
# written by Guo (Jason) Liu for Bruin Formula Racing
'''
resources.py is generated by Qt's resource system via this command: pyrcc5 resources.qrc -o resources.py
This command packages gui/resources and gui/main.ui into resources.py
for more reference website: https://www.pythonguis.com/tutorials/qresource-system/
'''
import resources, timer, globalfonts
import sys, logging
from datetime import datetime
from receive import Receive
from PyQt5 import uic
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtCore import Qt, QFile, QTimer, QThreadPool, QCoreApplication


dt_string = datetime.now().strftime("%m-%d-%Y %H:%M:%S")
logging.basicConfig(filename="logs/" + dt_string + ".log",
                    format='%(asctime)s %(message)s',
                    filemode='a')
logger = logging.getLogger()
# change to logging.INFO to decrease number of logs
logger.setLevel(logging.INFO)

window = None


class MainWindow(QMainWindow):
    def __init__(self, parent=None):
        # initialize
        logging.info('Initializing Main Window')
        QMainWindow.__init__(self)
        self.setWindowFlags(Qt.FramelessWindowHint)

        # load UI
        logging.info('Loading UI to Main Window')
        '''
        To load UI from resource.py, write:
            main_ui = QFile(":/res/main_ui")
            main_ui.open(QFile.ReadOnly)
            uic.loadUi(main_ui, self)
        To dynamically read from gui/main.ui, write:
            uic.loadUi("gui/main.ui", self)
        '''
        uic.loadUi("gui/main.ui", self)

        # scale widgets
        logging.info('Callig globalfonts to scale widgets\' fonts')
        globalfonts.scale_size_for_all(self)

        # launch timer
        logging.info('Initializing and launching timer')
        timer.main_win = self
        logging.debug('Timer times out every ' + str(timer.MS_PER_UPDATE) + 'ms')
        # launch timer to call infinitely
        qtimer = QTimer(self)
        qtimer.timeout.connect(timer.on_update_labels)
        qtimer.start(timer.MS_PER_UPDATE)

        # launch receive
        logging.info('Initializing and launching receive thread')
        logging.debug('QThreadPool max thread count is ' +
                      str(QThreadPool.globalInstance().maxThreadCount()))
        pool = QThreadPool.globalInstance()
        self.receive_thread = Receive(self)
        self.ExitLabel.exit.connect(self.receive_thread.stop)
        pool.start(self.receive_thread)

        # show self
        logging.info('Showing main window')
        # change to self.show() if your computer's resolution is not 1280x720
        self.show()
        logging.debug("Current screen width: " + str(self.frameGeometry().width()) +
                      ", height: " + str(self.frameGeometry().height()))

        logging.info('Main Window initialization complete')


if __name__ == "__main__":
    # idk what these two lines really do but let's leave them there
    QApplication.setStyle("fusion")
    QCoreApplication.setAttribute(Qt.AA_DisableHighDpiScaling)
    app = QApplication([])
    window = MainWindow()
    sys.exit(app.exec_())
